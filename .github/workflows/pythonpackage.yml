name: Python package

on: [push]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --ignore=E501,C0301,W504,F401 --exclude=.git,__pycache__,env, src/SeleniumProxy/_version.py --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Download and install chromedriver
        run: |
          wget -q "https://chromedriver.storage.googleapis.com/2.35/chromedriver_linux64.zip" -O /tmp/chromedriver.zip 
          unzip /tmp/chromedriver.zip -d /usr/bin/
          rm /tmp/chromedriver.zip
      - name: Download and install geckodriver
        run: |
          wget -q "https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz" -O /tmp/geckodriver.tgz 
          tar zxf /tmp/geckodriver.tgz -C /usr/bin/
          rm /tmp/geckodriver.tgz
      - name: Run Unit Tests
        run: |
          pip install nose
          nosetests tests
      - name: Run Acceptance Tests
        run: invoke robot
